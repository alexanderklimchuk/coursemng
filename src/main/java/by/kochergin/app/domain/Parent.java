package by.kochergin.app.domain;
// Generated 24.04.2016 10:10:15 by Hibernate Tools 3.2.2.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Parent generated by hbm2java
 */
@Entity
@Table(name="parent"
    ,catalog="mydb"
)
public class Parent  implements java.io.Serializable {


     private Integer id;
     private Clientstatus clientstatus;
     private User user;
     private String firstname;
     private String patronymic;
     private String lastname;
     private String address;
     private String phone;
     private String mphone;
     private Set<Child> childs = new HashSet<Child>(0);
     private Set<Discountcard> discountcards = new HashSet<Discountcard>(0);

    public Parent() {
    }

	
    public Parent(Clientstatus clientstatus, User user, String firstname, String lastname) {
        this.clientstatus = clientstatus;
        this.user = user;
        this.firstname = firstname;
        this.lastname = lastname;
    }
    public Parent(Clientstatus clientstatus, User user, String firstname, String patronymic, String lastname, String address, String phone, String mphone, Set<Child> childs, Set<Discountcard> discountcards) {
       this.clientstatus = clientstatus;
       this.user = user;
       this.firstname = firstname;
       this.patronymic = patronymic;
       this.lastname = lastname;
       this.address = address;
       this.phone = phone;
       this.mphone = mphone;
       this.childs = childs;
       this.discountcards = discountcards;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ClientStatus_id", nullable=false)
    public Clientstatus getClientstatus() {
        return this.clientstatus;
    }
    
    public void setClientstatus(Clientstatus clientstatus) {
        this.clientstatus = clientstatus;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="User_id", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }
    
    @Column(name="firstname", nullable=false)
    public String getFirstname() {
        return this.firstname;
    }
    
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }
    
    @Column(name="patronymic", length=45)
    public String getPatronymic() {
        return this.patronymic;
    }
    
    public void setPatronymic(String patronymic) {
        this.patronymic = patronymic;
    }
    
    @Column(name="lastname", nullable=false, length=120)
    public String getLastname() {
        return this.lastname;
    }
    
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }
    
    @Column(name="address")
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }
    
    @Column(name="phone", length=45)
    public String getPhone() {
        return this.phone;
    }
    
    public void setPhone(String phone) {
        this.phone = phone;
    }
    
    @Column(name="mphone", length=45)
    public String getMphone() {
        return this.mphone;
    }
    
    public void setMphone(String mphone) {
        this.mphone = mphone;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="parent")
    public Set<Child> getChilds() {
        return this.childs;
    }
    
    public void setChilds(Set<Child> childs) {
        this.childs = childs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="parent")
    public Set<Discountcard> getDiscountcards() {
        return this.discountcards;
    }
    
    public void setDiscountcards(Set<Discountcard> discountcards) {
        this.discountcards = discountcards;
    }




}


