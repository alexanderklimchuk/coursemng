package by.kochergin.app.domain;
// Generated 24.04.2016 10:10:15 by Hibernate Tools 3.2.2.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Course generated by hbm2java
 */
@Entity
@Table(name="course"
    ,catalog="mydb"
)
public class Course  implements java.io.Serializable {


     private Integer id;
     private Trainer trainer;
     private String name;
     private Set<Child> childs = new HashSet<Child>(0);
     private Set<Attendency> attendencies = new HashSet<Attendency>(0);
     private Set<Payment> payments = new HashSet<Payment>(0);

    public Course() {
    }

	
    public Course(Trainer trainer, String name) {
        this.trainer = trainer;
        this.name = name;
    }
    public Course(Trainer trainer, String name, Set<Child> childs, Set<Attendency> attendencies, Set<Payment> payments) {
       this.trainer = trainer;
       this.name = name;
       this.childs = childs;
       this.attendencies = attendencies;
       this.payments = payments;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Trainer_id", nullable=false)
    public Trainer getTrainer() {
        return this.trainer;
    }
    
    public void setTrainer(Trainer trainer) {
        this.trainer = trainer;
    }
    
    @Column(name="name", nullable=false, length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="child_course", catalog="mydb", joinColumns = { 
        @JoinColumn(name="Course_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="Child_id", nullable=false, updatable=false) })
    public Set<Child> getChilds() {
        return this.childs;
    }
    
    public void setChilds(Set<Child> childs) {
        this.childs = childs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="course")
    public Set<Attendency> getAttendencies() {
        return this.attendencies;
    }
    
    public void setAttendencies(Set<Attendency> attendencies) {
        this.attendencies = attendencies;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="course")
    public Set<Payment> getPayments() {
        return this.payments;
    }
    
    public void setPayments(Set<Payment> payments) {
        this.payments = payments;
    }




}


